{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","Header","react_router_dom","to","Tournaments","BayesTournaments","map","tournament","index","key","id","concat","name","date_start","date_end","series","TournamentDetails","props","tournamentId","parseInt","match","params","tournamentDetails","find","country","city","Series","BayesSeries","SeriesDetails","seriesId","seriesDetails","App","state","react_router","exact","path","component","React","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d054ebd9.chunk.js","sourcesContent":["import React from 'react';\r\n//import tournamentsBg from './tournaments.jpg';\r\n//import seriesBg from './series.jpg';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport BayesTournaments from './bayes-tournaments.json';\r\nimport BayesSeries from './bayes-series.json';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    //isLoading: true,\r\n    //tournaments: [],\r\n    //error: null\r\n  }\r\n\r\n  //var series = [... new Set(BayesTournaments.map(tournament => tournament.series.id))]\r\n\r\n  render () {\r\n    //const { isLoading, tournaments, error } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n      <div>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/tournaments\" component={Tournaments} />\r\n        <Route path=\"/tournamentDetails/:id\" component={TournamentDetails} />\r\n        <Route path=\"/series\" component={Series} />\r\n        <Route path=\"/seriesDetails/:id\" component={SeriesDetails} />\r\n\r\n      </div>\r\n    </Router>\r\n    )\r\n  }\r\n}\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header></Header>\r\n      <main>\r\n        <Link to=\"/tournaments\" className=\"App-link tournaments-link\">Tournaments</Link>  \r\n        <Link to=\"/series\" className=\"App-link series-link\">Series</Link>  \r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"App-header\">\r\n      <h1>\r\n        <Link to=\"/\" className=\"\">Bayes E-Sports</Link>\r\n      </h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nfunction Tournaments() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header></Header>\r\n      <h2>Tournaments Overview</h2>\r\n      <main>\r\n        <table>\r\n          <tbody>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Start</th>\r\n            <th>End</th>\r\n            <th>Series</th>\r\n          </tr>\r\n        {BayesTournaments.map((tournament, index)=>{\r\n          return (\r\n            <tr key={tournament.id}>\r\n              <td><Link to={`/tournamentDetails/${tournament.id}`} className=\"\">{tournament.name}</Link></td>\r\n              <td>{tournament.date_start}</td>\r\n              <td>{tournament.date_end}</td>\r\n              <td><Link to={`/seriesDetails/${tournament.series.id}`} className=\"\">{tournament.series.name}</Link></td>\r\n            </tr>\r\n          )\r\n        })}\r\n          </tbody>\r\n        </table>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TournamentDetails(props) {\r\n  let tournamentId = parseInt(props.match.params.id)\r\n  let tournamentDetails = BayesTournaments.find(tournament => tournament.id === tournamentId)\r\n\r\n  return (\r\n      <div className=\"App\">\r\n        <Header></Header>\r\n        <h2>Tournaments Details</h2>\r\n        <main>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <th>ID</th>\r\n                <td>{tournamentDetails.id}</td>\r\n              </tr>  \r\n              <tr>\r\n                <th>Name</th>\r\n                <td>{tournamentDetails.name}</td>\r\n              </tr> \r\n              <tr>\r\n                <th>Country</th>\r\n                <td>{tournamentDetails.country}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>City</th>\r\n                <td>{tournamentDetails.city}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Start</th>\r\n                <td>{tournamentDetails.date_start}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>End</th>\r\n                <td>{tournamentDetails.date_end}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Series</th>\r\n                <td>{tournamentDetails.series.name}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </main>\r\n      </div>\r\n  )\r\n}\r\n\r\nfunction Series() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header></Header>\r\n      <h2>Series Overview</h2>\r\n      <main>\r\n        <table>\r\n          <tbody>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Start</th>\r\n            <th>End</th>\r\n          </tr>\r\n        {BayesSeries.map((series, index)=>{\r\n          return (\r\n            <tr key={series.id}>\r\n              <td><Link to={`/seriesDetails/${series.id}`} className=\"\">{series.name}</Link></td>\r\n              <td>{series.date_start}</td>\r\n              <td>{series.date_end}</td>\r\n            </tr>\r\n          )\r\n        })}\r\n          </tbody>\r\n        </table>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SeriesDetails(props) {\r\n  let seriesId = parseInt(props.match.params.id)\r\n  let seriesDetails = BayesSeries.find(series => series.id === seriesId)\r\n\r\n  return (\r\n      <div className=\"App\">\r\n        <Header></Header>\r\n        <h2>Tournaments Details - TODO</h2>\r\n        <main>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <th>ID</th>\r\n                <td>{seriesDetails.id}</td>\r\n              </tr>  \r\n              <tr>\r\n                <th>Name</th>\r\n                <td>{seriesDetails.name}</td>\r\n              </tr> \r\n              <tr>\r\n                <th>Start</th>\r\n                <td>{seriesDetails.date_start}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>End</th>\r\n                <td>{seriesDetails.date_end}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Tournaments</th>\r\n                <td>List of tournaments (TODO)</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </main>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}